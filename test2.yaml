variables:
  system.debug: 'false'
  MOBILECENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  MOBILECENTER_BRANCH: build-only
  MOBILECENTER_BUILD_ID: $(Build.BuildNumber)
  MOBILECENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  MOBILECENTER_TRIGGER: continuous
  APPCENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  APPCENTER_BRANCH: build-only
  APPCENTER_BUILD_ID: $(Build.BuildNumber)
  APPCENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  APPCENTER_TRIGGER: continuous
  buildScripts.toolset: '{}'
  moduleName: app
  buildVariant: release
  isRoot: 'false'
  runTests: 'false'
  runLint: 'false'
  keystoreEncoded: null
  automaticSigning: 'false'
  buildBundle: 'false'
  MOBILECENTER_ANDROID_MODULE: app
  MOBILECENTER_ANDROID_VARIANT: release
  APPCENTER_ANDROID_MODULE: app
  APPCENTER_ANDROID_VARIANT: release
  sonoma.tags: 'continuous,android'
# Agent Queue 'Azure Pipelines' was used with unrecognized Agent Specification, vmImage property must be specified to determine image - https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#software
name: $(BuildID)
resources:
  repositories:
  - repository: self
    type: git
    ref: build-only
jobs:
- job: Phase_1
  displayName: Build
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 0
  pool:
    name: Azure Pipelines
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    lfs: true
  - task: PowerShell@2
    displayName: Install build scripts
    continueOnError: True
    inputs:
      targetType: inline
      scriptName: ''
      script: >-
        Set-Location -Path '$(Agent.HomeDirectory)'

        Invoke-WebRequest -Uri 'https://appcenterbuildassets-int.azureedge.net/buildscripts/appcenter-build-assets-latest.zip' -OutFile 'appcenter-build-assets-latest.zip'

        if (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force -Recurse }

        New-Item -ItemType directory -Path 'scripts' | Out-Null

        unzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'

        Invoke-Expression 'bash ./scripts/init.sh'
      failOnStderr: true
  - task: ShellScript@2
    displayName: Tag build
    inputs:
      scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
      args: $(sonoma.tags)
  - task: Gradle@1
    displayName: Gradle Task
    inputs:
      tasks: 'clean :app:assembleRelease '
      jdkArchitecture: x86
      publishJUnitResults: false
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: ShellScript@2
    name: appcenter_android_postprocess_output
    displayName: Android Postprocess
    inputs:
      scriptPath: $(Agent.HomeDirectory)/scripts/android-postprocess.sh
      args: $(build.sourcesdirectory)/app/build/outputs/apk
  - task: CopyFiles@2
    displayName: Copy build files to staging
    inputs:
      SourceFolder: $(build.sourcesdirectory)/app/build/outputs
      Contents: apk/**/*.apk
      TargetFolder: $(build.artifactstagingdirectory)/build
      OverWrite: true
      flattenFolders: true
  - task: CopyFiles@2
    displayName: Copy mapping files to staging
    inputs:
      SourceFolder: $(build.sourcesdirectory)/app/build/outputs
      Contents: mapping/**/mapping.txt
      TargetFolder: $(build.artifactstagingdirectory)/mapping
      OverWrite: true
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    displayName: Publish build
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/build
      ArtifactName: build
  - task: PublishBuildArtifacts@1
    displayName: Publish mapping
    condition: and(succeeded(), startsWith(variables['appcenter_android_postprocess_output.mapping'], true))
    continueOnError: True
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/mapping
      ArtifactName: mapping
...
